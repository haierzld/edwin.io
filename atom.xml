<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://haierzld.github.io/github.io/</id>
    <title>Gridea</title>
    <updated>2020-07-15T03:53:32.730Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://haierzld.github.io/github.io/"/>
    <link rel="self" href="https://haierzld.github.io/github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://haierzld.github.io/github.io/images/avatar.png</logo>
    <icon>https://haierzld.github.io/github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Python3.7 - tkinter Gui 04  使用Frame与Label，读颜色练注意力]]></title>
        <id>https://haierzld.github.io/github.io/post/python37-tkinter-gui-04-shi-yong-frame-yu-labeldu-yan-se-lian-zhu-yi-li/</id>
        <link href="https://haierzld.github.io/github.io/post/python37-tkinter-gui-04-shi-yong-frame-yu-labeldu-yan-se-lian-zhu-yi-li/">
        </link>
        <updated>2020-07-15T03:52:39.000Z</updated>
        <content type="html"><![CDATA[<p>使用Frame与Label，读颜色练注意力<br>
1、使用TK的两个控件Frame,Label；<br>
2、随机函数random.randint<br>
3、自定义函数，获得颜色；<br>
4、UI控件格式，pack，默认是top，所有需要传入参数为left；<br>
5、小技巧，就是排版我使用了frame当作容器，每一行用一个Frame；然后在Frame上面使用left格式增加label；<br>
6、复习了for循环；</p>
<p>小结，如果这个代码段学会，对于GUI 的操作应该都掌握，有需要查文档就可以。</p>
<p>备注：这个是生成10行7个不同颜色字，然后需要是读颜色而不是看字念。<br>
这个每天练习五遍，坚持21天，可以有效提升注意力。</p>
<p>帮人帮到底，我生成十张随机颜色表，有需要自己拷贝走，给小朋友练习；</p>
<pre><code class="language-python">from  tkinter  import *
import random


class  Application(Frame):
    &quot;&quot;&quot;一个经典的GUI程序类的写法&quot;&quot;&quot;
    def __init__(self,master=None):
        super().__init__(master)  # super()代表的是父类的定义 ，而不是父类的对像
        self.master = master
        self.pack()
        self.createWidget()


    def createWidget(self):

        def romcolor():
            colorlist	=	['white','red','green',&quot;yellow&quot;,&quot;blue&quot;,&quot;gray&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;]
            return  colorlist[random.randint(0,8)]

        def romcolortext():
            colorlistText	=	['白','红','绿',&quot;黄&quot;,&quot;蓝&quot;,&quot;灰&quot;,&quot;紫&quot;,&quot;橙&quot;,&quot;粉&quot;]
            return  colorlistText[random.randint(0,8)]


        def createlabel(sidelab,i,j,f01):
            fontsize = 25
            fontname = &quot;宋体&quot;
            label01 = Label(f01,text=romcolortext(),width=3,height=2,fg=romcolor(),bg=&quot;black&quot;,font=(fontname,fontsize))
            print(label01[&quot;text&quot;]+label01[&quot;fg&quot;])
            label01.pack(side=sidelab)

        for i in range(10):
            f01 = Frame(self)
            f01.pack()
            for j in range(7):
                createlabel(&quot;left&quot;,i,j,f01)
                print('i is ',i)
                print('j is ',j)


if __name__=='__main__':
    root = Tk()
    root.geometry(&quot;600x800+300+200&quot;)
    root.title(&quot;一个经典的注意力测试小游戏--读颜色练注意力&quot;)
    app = Application(master=root)
    root.mainloop()

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python3.7 -- 学习应用--舒尔特方格（注意力表格）]]></title>
        <id>https://haierzld.github.io/github.io/post/python37-xue-xi-ying-yong-shu-er-te-fang-ge-zhu-yi-li-biao-ge/</id>
        <link href="https://haierzld.github.io/github.io/post/python37-xue-xi-ying-yong-shu-er-te-fang-ge-zhu-yi-li-biao-ge/">
        </link>
        <updated>2020-07-15T03:48:21.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python"># 从2*2到9*9
#引入随机函数
import random

#注意力测试需要生成多少行
rowx = int((input('请输入一个1到9的数字:')))
lowy =rowx

#排序后数列
list=[]
#原随机数数列
list2 = []
#每次的随机数
str1 =''

for i in range(1,rowx*rowx+1):
        str1= str(random.randint(1,rowx*rowx*10000))
        list.append(str1)
        list2.append(str1)

#print('list:{0}',list)
#将随机数进行排序
list.sort()
#print(len(list))
#print('list after sort:{0}',list)
#print('list2:',list2)

n1 = 0
print('第一种方法：')
#for是从1开始，所有下标需要加1
for i in range(1,len(list)+1):
    n1 =list2.index(list[i-1])+1
    #不足三位使用空格补，这样有利格式对奇
    print('{0: ^3}'.format(n1),end=' ')
    #换行使用的
    if (i % rowx== 0):
        print('\n')

print('第二种方法：')

for i in range(1,rowx+1):
    j=1
    for j in range(1,lowy+1):
        r1 =i*rowx-(rowx-j)
        n1 = list[r1-1]
        rx=list2.index(n1)+1
        print('{0: ^3}'.format(rx),end=&quot; &quot;)
    print('\n')

#以下是运行结果
'''
第一种方法：
 8   7  10   3  12

17  16  18   5   2

23  19  14  15   6

 1   4  13  22  25

24   9  20  11  21

第二种方法：
 8   7  10   3  12

17  16  18   5   2

23  19  14  15   6

 1   4  13  22  25

24   9  20  11  21  
'''
</code></pre>
]]></content>
    </entry>
</feed>